/*
copy this file to sensorconfig.h
and change your config here
or link one from configs/ dir
*/
#define SOFTWARE_VERSION_INITIALS "MULTISENS"
// additionally set SOFTWARE_VERSION_NUMBER in softwareversion.h
#include "softwareversion.h"


// GPIO PINSs <-> nodemcu PINs (Dx) mapping
//          0  1  2  3  4   5   6   7   8  9  10  11  12
int D[13]={16, 5, 4, 0, 2, 14, 12, 13, 15, 3,  1,  9, 10};

/* defines to activate sensors */
#define PPD_ACTIVE
//#define DHT_ACTIVE
// #define DS_ACTIVE
//#define GPS_ACTIVE

//#define DEBUG_CYCLES

unsigned int verbosity = 4; //TODO: implement; output levels over serial, increase to get more messages, like 0 no_messages, 1 warn, 2 info, 5 debug

/* DHT PIN */
// #define DHTPIN 4 // = GPIO PIN
#define DHTPIN D[2] // = Dx on devboard
#define DHTTYPE DHT22

/* ONEWIRE BUS PIN */
// #define ONEWIRE_PIN 15 // GPIO15=D8
#define ONEWIRE_PIN D[4]

/* PPD PINs */
#define  PPD42_P1_PIN D[6] //12 // GPIO12=D6
#define  PPD42_P2_PIN D[5] //14 // GPIO14=D5
unsigned long sampletime_ms = 30000;


/* WIFI definitions */
#define WIRELESS_ACTIVE

#ifdef WIRELESS_ACTIVE
const char* ssid = "Freifunk";
const char* password = "";
#define PUSHTO_DJANGOAPI
#ifdef PUSHTO_DJANGOAPI
const char host[] = "api.luftdaten.info";
const int httpPort = 80;
#endif

/* MQTT settings */
#define PUSHTO_MQTT
#ifdef PUSHTO_MQTT
const char mqttserver[] = "mqtt.opendataset.click";
const int mqttport = 1883;
const char mqtttopicbase[]="dusti"; // no "/"
const char mqttintopic[]="intopicforclient";
// endif PUSHTO_MQTT
#endif

#endif // WIRELESS_ACTIVE

/* GPS settings */
#ifdef GPS_ACTIVE
unsigned int pin_gps_rx=D[7];
unsigned int pin_gps_tx=D[8];
unsigned int gps_baudrate=9600;
unsigned long gpsmaxtime_ms=2100; // max time to wait for GPS messages on serial
#endif

#define PIN_LED_STATUS BUILTIN_LED
//#define PIN_LED_STATUS D[8] // the GPIO of the LED pin
unsigned int pin_led_status = PIN_LED_STATUS ; // the GPIO of the LED pin

// nodemcu pins Dx - GPIOx
// in this config use GPIO number
// 0 [*]   GPIO16
// 1       GPIO5
// 2       GPIO4
// 3       GPIO0
// 4       GPIO2
// 5       GPIO14 (SPI CLK)
// 6       GPIO12 (SPI MISO)
// 7       GPIO13 (SPI MOSI)
// 8       GPIO15 (SPI CS)
// 9       GPIO3 (UART RX)
// 10      GPIO1 (UART TX)
// 11      GPIO9
// 12      GPIO10

/*******************************************************/
/* Wiring Instruction:                                 */
/*      Pin 2 of dust sensor PM2.5 -> Digital 6 (PWM)  */
/*      Pin 3 of dust sensor       -> +5V              */
/*      Pin 4 of dust sensor PM1   -> Digital 3 (PMW)  */ 
/*                                                     */
/*      - PPD42NS Pin 1 (grey)  => GND                 */
/*      - PPD42NS Pin 2 (green) => Pin D5 /GPIO14      */
/*        counts particles PM25                        */
/*      - PPD42NS Pin 3 (black) => Vin                 */
/*      - PPD42NS Pin 4 (white) => Pin D6 / GPIO12     */
/*        counts particles PM10                        */
/*      - PPD42NS Pin 5 (red)   => unused              */
/*                                                     */
/*      ATTENTION this is another wiring, from lua version */
/*      -- esp8266-12                                  */
/*         pin_P1=6  -- gpio12   black                 */
/*         pin_P2=5  -- gpio14   white                 */
/*         green => GND                                */
/*         yellow => Vin (5V)                          */
/* see datasheet http://sca-shinyei.com/pdf/PPD42NS.pdf */
/* CN : S5B-EH(JST) (PINs on sensor board)             */
/* 1 : COMMON(GND)                                     */
/* 2 : OUTPUT(P2)                                      */
/* 3 : INPUT(5VDC 90mA)                                */
/* 4 : OUTPUT(P1)                                      */
/* 5 : INPUT(T1)   FOR THRESHOLD FOR [P2]              */
/*                                                     */
/*******************************************************/

// If the include file is meant to be shared by multiple Sketches then...
// Close the Arduino IDE
// Navigate to the {Arduino}\hardware\libraries directory
// Create a subdirectory.  I suggest something like MyCommon.
// In the new subdirectory, create a header file.  I suggest something like MyCommon.h.
// Open the new header file, edit it as you wish, and save it
// Open the Arduino IDE
// Create or open a Sketch
// Add a #include to the top of the Sketch that references your new include file
// http://forum.arduino.cc/index.php?topic=37371.0
